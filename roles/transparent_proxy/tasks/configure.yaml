---
- name: Check systemd version
  ansible.builtin.shell: systemd --version | awk 'NR==1 { print $2 }'
  check_mode: false
  register: systemd_version

- name: Add systemd-resolved config
  community.general.ini_file:
    path: /etc/systemd/resolved.conf.d/consul.conf
    state: present
    mode: 0644
    section: Resolve
    option: "{{ item.option }}"
    value: "{{ item.value }}"
    no_extra_spaces: yes
  loop:
    - { option: DNS, value: "127.0.0.1{{ dns_port }}" }
    - { option: Domains, value: "~consul" }
    - { option: DNSEC, value: "no" }
  vars:
    # Systemd version 246 and greater allow specifying a non-standard port on
    # the DNS server address.
    dns_port: "{{ (systemd_version.stdout|int >= 246) | ternary(':8600', '') }}"

- name: Create Envoy user account
  ansible.builtin.user:
    name: envoy
    create_home: no
    system: yes

- name: Create dummy interface if enabled
  block:
    - name: "Create /etc/systemd/network/10-{{ dummy_interface_name }}.netdev"
      ansible.builtin.template:
        src: dummy-netdev.j2
        dest: "/etc/systemd/network/10-{{ dummy_interface_name }}.netdev"
        # 0644
        mode: u=rw,go=r
        owner: root
        group: root
      notify: restart systemd-networkd

    - name: "Create /etc/systemd/network/20-{{ dummy_interface_name }}.network"
      ansible.builtin.template:
        src: dummy-network.j2
        dest: "/etc/systemd/network/20-{{ dummy_interface_name }}.network"
        # 0644
        mode: u=rw,go=r
        owner: root
        group: root
      notify: restart systemd-networkd
  when: dummy_interface_enable == true

- name: Add DNSStubListenerExtra IP(s) to systemd-resolved config
  community.general.ini_file:
    path: /etc/systemd/resolved.conf.d/consul.conf
    state: present
    mode: 0644
    section: Resolve
    option: DNSStubListenerExtra
    value: "{{ dns_stub_listener_ip }}"
    no_extra_spaces: yes
  when: dns_stub_listener_ip != False
  notify: restart systemd-resolved
